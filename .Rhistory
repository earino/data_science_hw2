bayesfit <- train(Survived ~., t, method="bayes", trControl = trainControl(method = "cv"))
data <- Titanic
labels <- data$Survived
data <- Titanic
data <- data.frame(Titanic)
labels <- data$Survived
data$Survived <- NULL
set.seed(1)
train.pct <- 0.7
N <- nrow(data)
train.index <- sample(1:N, train.pct * N)
train.data <- data[train.index, ]
test.data <- data[-train.index, ]
train.labels <- as.factor(as.matrix(labels)[train.index, ])
test.labels <- as.factor(as.matrix(labels)[-train.index, ])
k<-10
knn.fit <- knn(train = train.data, test = test.data, cl = train.labels, k=k)
str(train.data)
str(test.data)
print(train.labels)
knn.fit <- knn(train = train.data, test = test.data, cl = train.labels, k=3)
print(train.data)
print(test.data)
print(train.labels)
print(test.labels)
knn.fit <- knn(train = train.data, test = test.data, cl = train.labels, k=3)
?knn
str(train.data)
train.data$Freq <- NULL
str(train.data)
test.data$Freq <- NULL
knn.fit <- knn(train = train.data, test = test.data, cl = train.labels, k=3)
abalone.data <- read.csv("~/Documents/Data Science/hw2/abalone.data.txt")
View(abalone.data)
bayesfit <- train(Survived ~., t, method="bayes", trControl = trainControl(method = "cv"))
knnfit <- train(rings ~ ., abalone.data, method="knn", trControl = trainControl(method = "cv"))
knnfit
predict(knnfit)
smp_size <- floor(0.75 * nrow(abalone.data))
set.seed(1)
train_ind <- sample(seq_len(nrow(abalone.data)), size=smp_size)
train <- abalone.data[train_ind,]
test <- abalone.data[-train_ind,]
knnfit <- train(rings ~ ., train, method="knn", trControl = trainControl(method = "cv"))
print(table(test$rings, knnfit))
print(table(test$rings, knnfit$knn))
confusionMatrix(knnfit, test$rings)
?confusionMatrix
?knnfit
View(knnfit)
str(knnfit)
print(knnfit)
?predict
predict(knnfit, test$rings)
?train
confusionMatrix(knnfit)
?confusionMatrix
confusionMatrix(test$rings, knnfit)
str(test$rings)
str(train$rings)
str(data)
data <- abalone.data
str(data)
labels <- data$rings
data$rings <- NULL
data$sex <- NULL
set.seed(1)
train.pct <- 0.7
N <- nrow(data)
train.index <- sample(1:N, train.pct * N)
train.data <- data[train.index, ]
test.data <- data[-train.index, ]
train.labels <- as.factor(as.matrix(labels)[train.index, ])
test.labels <- as.factor(as.matrix(labels)[-train.index, ])
k<-10
knn.fit <- knn(train = train.data, # training set
test = test.data, cl = train.labels, k = k
# test set
# true labels
# number of NN to poll
)
print(table(test.labels, knn.fit))
bayesfit <- train(train.data, train.labels, 'nb',trControl=trainControl(method='cv',number=10))
str(train.data)
str(train.labels)
library("e1071")
classifier <- naiveBayes(train.data, train.labels)
table(predict(classifier, test.labels), test.data)
predictions <- predict(classifier, test.data)
table(predictions, test.labels)
classifier
